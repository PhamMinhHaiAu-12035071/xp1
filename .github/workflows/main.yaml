name: xp1

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FLUTTER_VERSION: "3.35.1" # Should match .fvmrc flutter version
  # 🔧 CI Environment Variables (DRY principle - defined once, used everywhere)
  # Development Environment
  DEV_API_URL: "https://dev-api.xp1.com/api/v1"
  DEV_APP_NAME: "XP1 Development CI"
  DEV_ENVIRONMENT_NAME: "development"
  DEV_IS_DEBUG_MODE: "true"
  DEV_API_TIMEOUT_MS: "30000"
  # Staging Environment
  STAGING_API_URL: "https://staging-api.xp1.com/api"
  STAGING_APP_NAME: "XP1 Staging"
  STAGING_ENVIRONMENT_NAME: "staging"
  STAGING_IS_DEBUG_MODE: "false"
  STAGING_API_TIMEOUT_MS: "20000"
  # Production Environment
  PROD_API_URL: "https://api.xp1.com/api"
  PROD_APP_NAME: "XP1"
  PROD_ENVIRONMENT_NAME: "production"
  PROD_IS_DEBUG_MODE: "false"
  PROD_API_TIMEOUT_MS: "15000"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write
  checks: write
  statuses: write

jobs:
  # Check for file changes first
  paths-filter:
    runs-on: ubuntu-latest
    outputs:
      pubspec-changed: ${{ steps.filter.outputs.pubspec }}
      dart-changed: ${{ steps.filter.outputs.dart }}
      docs-changed: ${{ steps.filter.outputs.docs }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            pubspec:
              - 'pubspec.yaml'
              - 'pubspec.lock'
            dart:
              - 'lib/**/*.dart'
              - 'test/**/*.dart'
              - 'tool/**/*.dart'
            docs:
              - '**/*.md'
              - 'doc/**/*'

  # 🔧 Development Environment Setup (DRY: setup once, reused by all jobs)
  setup:
    name: 🔧 Development Environment Setup
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      # 🐦 Setup Flutter first (no FVM in CI)
      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"
          cache: true

      # 🧹 Clean and prepare environment
      - name: 🧹 Clean environment
        run: flutter clean

      # 🔧 Setup envied environment with composite action
      - name: 🔧 Setup Envied Environment
        uses: ./.github/actions/setup-envied
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          environment-mode: "all"
          very-good-cli: "true"

      # ✅ Success
      - name: ✅ Setup completed
        run: |
          echo "🎉 Development environment setup finished!"
          echo "✅ Flutter: $(flutter --version | head -1)"
          echo "✅ Very Good CLI: $(very_good --version)"

  semantic-pull-request:
    uses: VeryGoodOpenSource/very_good_workflows/.github/workflows/semantic_pull_request.yml@v1

  dependency-validation:
    name: 🔍 Dependency Validation
    needs: [paths-filter, setup]
    if: needs.paths-filter.outputs.pubspec-changed == 'true' || github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Envied Environment
        uses: ./.github/actions/setup-envied
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          environment-mode: "all"
          very-good-cli: "false"

      - name: 🔍 Validate dependencies
        run: flutter pub run rps validate-deps

  license-compliance:
    name: 🔐 License Compliance
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Envied Environment
        uses: ./.github/actions/setup-envied
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          environment-mode: "all"
          very-good-cli: "true"

      - name: 🔐 Check license compliance
        run: make license-ci

  # Main CI Pipeline (depends on setup)
  ci:
    name: 🚀 Flutter CI Pipeline
    needs: [paths-filter, setup]
    if: needs.paths-filter.outputs.dart-changed == 'true' || github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Envied Environment
        uses: ./.github/actions/setup-envied
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          environment-mode: "all"
          very-good-cli: "true"

      # 🏗️ Ensure generated code is ready (idempotent)
      - name: 🏗️ Generate code (idempotent)
        run: flutter pub run build_runner build --delete-conflicting-outputs

      # 🔍 Check code quality
      - name: 🔍 Format Check
        run: dart format --set-exit-if-changed .

      - name: 🔍 Analyze Code
        run: flutter analyze --fatal-infos

      # 🧪 Run tests with Very Good CLI
      - name: 🧪 Run Tests
        run: very_good test --coverage

      # ✅ Success
      - name: ✅ All Checks Passed
        run: echo "🎉 Flutter CI pipeline completed successfully!"

  spell-check:
    name: 📝 Spell Check
    needs: [paths-filter, setup]
    if: needs.paths-filter.outputs.docs-changed == 'true' || github.event_name == 'push'
    uses: VeryGoodOpenSource/very_good_workflows/.github/workflows/spell_check.yml@v1
    with:
      includes: |
        **/*.md
      modified_files_only: false
