name: xp1

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FLUTTER_VERSION: "3.35.1" # Should match .fvmrc flutter version
  FVM_CACHE_PATH: ~/.fvm
  PUB_CACHE: ~/.pub-cache

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write
  checks: write
  statuses: write

jobs:
  # Check for file changes first
  paths-filter:
    runs-on: ubuntu-latest
    outputs:
      pubspec-changed: ${{ steps.filter.outputs.pubspec }}
      dart-changed: ${{ steps.filter.outputs.dart }}
      docs-changed: ${{ steps.filter.outputs.docs }}
      licenses-changed: ${{ steps.filter.outputs.licenses }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            pubspec:
              - 'pubspec.yaml'
            dart:
              - 'lib/**/*.dart'
              - 'test/**/*.dart'
              - 'tool/**/*.dart'
            docs:
              - '**/*.md'
              - 'doc/**/*'
            licenses:
              - 'pubspec.yaml'
              - 'pubspec.lock'

  semantic-pull-request:
    uses: VeryGoodOpenSource/very_good_workflows/.github/workflows/semantic_pull_request.yml@v1

  dependency-validation:
    needs: paths-filter
    if: needs.paths-filter.outputs.pubspec-changed == 'true' || github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Flutter
        uses: ./.github/actions/flutter-setup
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: 🔍 Validate dependencies
        run: |
          # Ensure Flutter is accessible for RPS commands
          export PATH="$HOME/.fvm/bin:$PATH"

          if ! command -v flutter &> /dev/null; then
            echo "❌ Flutter not accessible for RPS commands"
            echo "🔍 Current PATH: $PATH"
            exit 1
          fi

          echo "✅ Flutter ready for RPS: $(which flutter)"
          flutter pub run rps validate-deps

  license-compliance:
    needs: paths-filter
    if: needs.paths-filter.outputs.licenses-changed == 'true' || github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Flutter
        uses: ./.github/actions/flutter-setup
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: 🗂️ Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.PUB_CACHE }}
            ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: 🔧 Setup Very Good CLI
        run: dart pub global activate very_good_cli

      - name: 🔐 Check license compliance
        run: make license-ci

  code-generation:
    needs: paths-filter
    if: needs.paths-filter.outputs.dart-changed == 'true' || github.event_name == 'push'
    runs-on: ubuntu-latest-4-cores
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Flutter
        uses: ./.github/actions/flutter-setup
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          setup-build-runner: true
          enable-performance-monitor: true

      - name: 🏗️ Generate code (optimized with timing)
        run: |
          echo "⏰ Starting code generation at $(date)"
          start_time=$(date +%s)

          # Ensure Flutter and Dart are in PATH for build_runner
          export PATH="$HOME/.fvm/bin:$PATH"

          # Verify flutter is accessible
          if ! command -v flutter &> /dev/null; then
            echo "❌ Flutter not found in PATH"
            echo "🔍 Current PATH: $PATH"
            exit 1
          fi

          echo "✅ Flutter accessible at: $(which flutter)"
          echo "🔧 Using Flutter version: $(flutter --version --suppress-analytics | head -1)"

          # Check if generated files exist and are up-to-date
          if [ -f ".dart_tool/build/entrypoint/build.dart.snapshot" ] && [ -f "lib/core/di/injection_container.config.dart" ]; then
            echo "🔄 Incremental build (cache hit)"
            flutter pub run build_runner build --release --verbose
          else
            echo "🆕 Full build (cache miss or first run)"
            flutter pub run build_runner build --delete-conflicting-outputs --release --verbose
          fi

          end_time=$(date +%s)
          duration=$((end_time - start_time))
          echo "⚡ Code generation completed in ${duration} seconds"

          # Show generated files stats
          echo "📊 Generated files:"
          find lib -name "*.g.dart" -o -name "*.config.dart" | wc -l | xargs echo "Total generated files:"
          du -sh .dart_tool/build 2>/dev/null | cut -f1 | xargs echo "Build cache size:" || echo "Build cache size: N/A"

      - name: 📤 Upload generated files
        uses: actions/upload-artifact@v4
        with:
          name: generated-files
          path: |
            lib/**/*.g.dart
            lib/**/*.config.dart
          retention-days: 1

  analysis:
    needs: [paths-filter, code-generation]
    if: needs.paths-filter.outputs.dart-changed == 'true' || github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Flutter
        uses: ./.github/actions/flutter-setup
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: 🗂️ Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.PUB_CACHE }}
            ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: 📥 Download generated files
        uses: actions/download-artifact@v4
        with:
          name: generated-files

      - name: ✅ Verify dependencies
        run: flutter pub deps-check

      - name: 🔍 Analyze project source
        run: flutter analyze

      - name: 🔍 Ensure code formatting
        run: dart format --set-exit-if-changed .

  test:
    needs: [paths-filter, code-generation]
    if: needs.paths-filter.outputs.dart-changed == 'true' || github.event_name == 'push'
    runs-on: ubuntu-latest-4-cores
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Flutter
        uses: ./.github/actions/flutter-setup
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: 🗂️ Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.PUB_CACHE }}
            ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: 📥 Download generated files
        uses: actions/download-artifact@v4
        with:
          name: generated-files

      - name: 🧪 Run tests
        run: flutter test --no-pub --coverage --test-randomize-ordering-seed random

      - name: 📊 Check code coverage
        uses: VeryGoodOpenSource/very_good_coverage@v3
        with:
          path: coverage/lcov.info

  spell-check:
    needs: paths-filter
    if: needs.paths-filter.outputs.docs-changed == 'true' || github.event_name == 'push'
    uses: VeryGoodOpenSource/very_good_workflows/.github/workflows/spell_check.yml@v1
    with:
      includes: |
        **/*.md
      modified_files_only: false
