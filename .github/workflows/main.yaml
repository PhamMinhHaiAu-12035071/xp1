name: xp1

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FLUTTER_VERSION: "3.35.1" # Should match .fvmrc flutter version

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write
  checks: write
  statuses: write

jobs:
  # Check for file changes first
  paths-filter:
    runs-on: ubuntu-latest
    outputs:
      pubspec-changed: ${{ steps.filter.outputs.pubspec }}
      dart-changed: ${{ steps.filter.outputs.dart }}
      docs-changed: ${{ steps.filter.outputs.docs }}
      licenses-changed: ${{ steps.filter.outputs.licenses }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            pubspec:
              - 'pubspec.yaml'
            dart:
              - 'lib/**/*.dart'
              - 'test/**/*.dart'
              - 'tool/**/*.dart'
            docs:
              - '**/*.md'
              - 'doc/**/*'
            licenses:
              - 'pubspec.yaml'
              - 'pubspec.lock'

  semantic-pull-request:
    uses: VeryGoodOpenSource/very_good_workflows/.github/workflows/semantic_pull_request.yml@v1

  dependency-validation:
    needs: paths-filter
    if: needs.paths-filter.outputs.pubspec-changed == 'true' || github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: 🗂️ Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.PUB_CACHE }}
            ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: 🗂️ Cache FVM
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache/bin
          key: ${{ runner.os }}-fvm-${{ env.FLUTTER_VERSION }}

      - name: 🔧 Install FVM
        run: dart pub global activate fvm

      - name: 🔧 Add Dart Pub Bin to PATH
        run: echo "$HOME/.pub-cache/bin" >> $GITHUB_PATH

      - name: 📦 Install dependencies
        run: flutter pub get

      - name: 🔍 Validate dependencies
        run: flutter pub run rps validate-deps

  license-compliance:
    needs: paths-filter
    if: needs.paths-filter.outputs.licenses-changed == 'true' || github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: 🗂️ Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.PUB_CACHE }}
            ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: 🔧 Setup Very Good CLI
        run: dart pub global activate very_good_cli

      - name: 📦 Install dependencies
        run: flutter pub get

      - name: 🔐 Check license compliance
        run: make license-ci

  code-generation:
    needs: paths-filter
    if: needs.paths-filter.outputs.dart-changed == 'true' || github.event_name == 'push'
    runs-on: ubuntu-latest-4-cores
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: 🗂️ Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.PUB_CACHE }}
            ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: 🗂️ Cache FVM
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache/bin
          key: ${{ runner.os }}-fvm-${{ env.FLUTTER_VERSION }}

      - name: 🔧 Install FVM
        run: dart pub global activate fvm

      - name: 🔧 Add Dart Pub Bin to PATH
        run: echo "$HOME/.pub-cache/bin" >> $GITHUB_PATH

      - name: 📦 Install dependencies
        run: flutter pub get

      - name: 🗂️ Cache build_runner outputs
        uses: actions/cache@v4
        with:
          path: |
            .dart_tool/build
            lib/**/*.g.dart
            lib/**/*.config.dart
          key: ${{ runner.os }}-build-runner-${{ hashFiles('**/pubspec.lock', 'lib/**/*.dart', '!lib/**/*.g.dart', '!lib/**/*.config.dart') }}

      - name: 🏗️ Generate code
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: 📤 Upload generated files
        uses: actions/upload-artifact@v4
        with:
          name: generated-files
          path: |
            lib/**/*.g.dart
            lib/**/*.config.dart
          retention-days: 1

  analysis:
    needs: [paths-filter, code-generation]
    if: needs.paths-filter.outputs.dart-changed == 'true' || github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: 🗂️ Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.PUB_CACHE }}
            ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: 📥 Download generated files
        uses: actions/download-artifact@v4
        with:
          name: generated-files

      - name: 📦 Install dependencies
        run: flutter pub get

      - name: ✅ Verify dependencies
        run: flutter pub deps-check

      - name: 🔍 Analyze project source
        run: flutter analyze

      - name: 🔍 Ensure code formatting
        run: dart format --set-exit-if-changed .

  test:
    needs: [paths-filter, code-generation]
    if: needs.paths-filter.outputs.dart-changed == 'true' || github.event_name == 'push'
    runs-on: ubuntu-latest-4-cores
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: 🗂️ Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.PUB_CACHE }}
            ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: 📥 Download generated files
        uses: actions/download-artifact@v4
        with:
          name: generated-files

      - name: 📦 Install dependencies
        run: flutter pub get

      - name: 🧪 Run tests
        run: flutter test --no-pub --coverage --test-randomize-ordering-seed random

      - name: 📊 Check code coverage
        uses: VeryGoodOpenSource/very_good_coverage@v3
        with:
          path: coverage/lcov.info

  spell-check:
    needs: paths-filter
    if: needs.paths-filter.outputs.docs-changed == 'true' || github.event_name == 'push'
    uses: VeryGoodOpenSource/very_good_workflows/.github/workflows/spell_check.yml@v1
    with:
      includes: |
        **/*.md
      modified_files_only: false
