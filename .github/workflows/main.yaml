name: xp1

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FLUTTER_VERSION: "3.35.1" # Should match .fvmrc flutter version

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write
  checks: write
  statuses: write

jobs:
  # Check for file changes first
  paths-filter:
    runs-on: ubuntu-latest
    outputs:
      pubspec-changed: ${{ steps.filter.outputs.pubspec }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            pubspec:
              - 'pubspec.yaml'

  semantic-pull-request:
    uses: VeryGoodOpenSource/very_good_workflows/.github/workflows/semantic_pull_request.yml@v1

  dependency-validation:
    needs: paths-filter
    if: needs.paths-filter.outputs.pubspec-changed == 'true' || github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: 🔧 Setup build environment
        run: |
          # Install make if not available
          if ! command -v make &> /dev/null; then
            echo "Installing make..."
            sudo apt-get update
            sudo apt-get install -y make
          fi
          # Install lefthook for git hooks
          if ! command -v lefthook &> /dev/null; then
            echo "Installing lefthook..."
            npm install -g @arkweid/lefthook
          fi
          # Make scripts executable
          chmod +x scripts/*.sh || true

      - name: 📦 Install dependencies
        run: make deps

      - name: 🏗️ Setup environment files
        run: |
          cp lib/features/env/development.env.example lib/features/env/development.env
          cp lib/features/env/staging.env.example lib/features/env/staging.env
          cp lib/features/env/production.env.example lib/features/env/production.env

      - name: 🏗️ Generate development environment
        run: make generate-env-dev

      - name: 🎨 Format generated code
        run: make format

      - name: 🔍 Validate dependencies
        run: make validate-deps

  license-compliance:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: 🔧 Setup build environment
        run: |
          # Install make if not available
          if ! command -v make &> /dev/null; then
            echo "Installing make..."
            sudo apt-get update
            sudo apt-get install -y make
          fi
          # Install lefthook for git hooks
          if ! command -v lefthook &> /dev/null; then
            echo "Installing lefthook..."
            npm install -g @arkweid/lefthook
          fi
          # Make scripts executable
          chmod +x scripts/*.sh || true

      - name: 📦 Install dependencies
        run: make deps

      - name: 🏗️ Setup environment files
        run: |
          cp lib/features/env/development.env.example lib/features/env/development.env
          cp lib/features/env/staging.env.example lib/features/env/staging.env
          cp lib/features/env/production.env.example lib/features/env/production.env

      - name: 🏗️ Generate development environment
        run: make generate-env-dev

      - name: 🎨 Format generated code
        run: make format

      - name: 🛠️ Install Very Good CLI
        run: dart pub global activate very_good_cli

      - name: 🔐 Check license compliance
        run: make license-ci

  i18n-validation:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: 🔧 Setup build environment
        run: |
          # Install make if not available
          if ! command -v make &> /dev/null; then
            echo "Installing make..."
            sudo apt-get update
            sudo apt-get install -y make
          fi
          # Install lefthook for git hooks
          if ! command -v lefthook &> /dev/null; then
            echo "Installing lefthook..."
            npm install -g @arkweid/lefthook
          fi
          # Make scripts executable
          chmod +x scripts/*.sh || true

      - name: 📦 Install dependencies
        run: make deps

      - name: 🏗️ Setup environment files
        run: |
          cp lib/features/env/development.env.example lib/features/env/development.env
          cp lib/features/env/staging.env.example lib/features/env/staging.env
          cp lib/features/env/production.env.example lib/features/env/production.env

      - name: 🌐 Validate i18n translations
        run: make i18n-validate

  build:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: 🔧 Setup build environment
        run: |
          # Install make if not available
          if ! command -v make &> /dev/null; then
            echo "Installing make..."
            sudo apt-get update
            sudo apt-get install -y make
          fi
          # Install lefthook for git hooks
          if ! command -v lefthook &> /dev/null; then
            echo "Installing lefthook..."
            npm install -g @arkweid/lefthook
          fi
          # Make scripts executable
          chmod +x scripts/*.sh || true

      - name: 📦 Install dependencies
        run: make deps

      - name: 🏗️ Setup environment files
        run: |
          cp lib/features/env/development.env.example lib/features/env/development.env
          cp lib/features/env/staging.env.example lib/features/env/staging.env
          cp lib/features/env/production.env.example lib/features/env/production.env

      - name: 🏗️ Generate development environment
        run: make generate-env-dev

      - name: 🔍 Verify generated files
        run: |
          echo "Checking generated files..."
          ls -la lib/features/env/
          find lib -name "*.g.dart" -type f || echo "No .g.dart files found"
          echo "Checking build directory..."
          find . -name "*.g.dart" -type f 2>/dev/null || echo "No .g.dart files anywhere"
          echo "Checking last build_runner step specifically..."
          find . -name "*env*.g.dart" -type f 2>/dev/null || echo "No env .g.dart files"

      - name: 🎨 Format check
        run: make format-check

      - name: 🌐 Generate i18n files
        run: make i18n-generate

      - name: 🕵️ Analyze
        run: make analyze

      - name: 🧪 Run tests
        run: make test

      - name: 📊 Generate test coverage
        run: make coverage

  spell-check:
    uses: VeryGoodOpenSource/very_good_workflows/.github/workflows/spell_check.yml@v1
    with:
      includes: |
        **/*.md
      modified_files_only: false
