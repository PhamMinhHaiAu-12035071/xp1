# lefthook.yml
# Official git hooks only - custom commands moved to scripts/ and Makefile

# Official git hooks with scripts + Makefile integration
pre-commit:
  parallel: true
  commands:
    # Format and fix code first (staged files only)
    rps-pre-commit:
      glob: "*.dart"
      run: fvm flutter pub run rps pre-commit
      stage_fixed: true
    # Quick spell check on staged files
    spell-check-quick:
      glob: "*.md"
      run: |
        npx cspell --config cspell.json {staged_files} --no-progress || \
        echo "‚ö†Ô∏è Fix spelling issues"
    # Quick format check (fast)
    format-check:
      glob: "*.dart"
      run: fvm dart format lib/ test/ --set-exit-if-changed --output=none
    # Quick analysis (staged files only)
    analyze-quick:
      glob: "*.dart"
      run: fvm flutter analyze --fatal-infos
    # Quick license check cho staged changes
    license-quick:
      glob: "pubspec.yaml"
      run: |
        if git diff --cached --name-only | grep -q "pubspec.yaml"; then
          echo "üì¶ pubspec.yaml changed, checking licenses..."
          fvm flutter pub run rps license-check
        fi
    # Dependency validation when pubspec.yaml changes
    deps-check-on-pubspec-change:
      glob: "pubspec.yaml"
      run: |
        if git diff --cached --name-only | grep -q "pubspec.yaml"; then
          echo "üì¶ pubspec.yaml changed, validating dependencies..."
          fvm flutter pub run rps validate-deps
        fi
    # Dart analyze staged Dart files and pubspec.yaml
    pubspec-analyze:
      glob: ["*.dart", "pubspec.yaml"]
      run: |
        # Check for staged Dart files
        if git diff --cached --name-only | grep -q "\.dart$"; then
          echo "üìù Analyzing staged Dart files for linting issues..."
          STAGED_DART_FILES=$(git diff --cached --name-only | grep "\.dart$")
          dart analyze $STAGED_DART_FILES
        fi
        # Check for pubspec.yaml change
        if git diff --cached --name-only | grep -q "^pubspec\.yaml$"; then
          echo "üìù Analyzing pubspec.yaml for linting issues..."
          dart analyze pubspec.yaml
        fi

pre-push:
  parallel: false
  commands:
    # Run bash script tests first (TDD validation)
    bash-script-tests:
      run: npm test
    # Full license compliance check tr∆∞·ªõc khi push
    license-compliance:
      run: fvm flutter pub run rps license-check
    # Run complete CI pipeline via Makefile
    full-ci-pipeline:
      run: make local-ci
    # Full dependency validation before push
    validate-dependencies:
      run: fvm flutter pub run rps validate-deps

commit-msg:
  commands:
    conventional-commit:
      run: fvm dart run tool/validate_commit.dart {1}
