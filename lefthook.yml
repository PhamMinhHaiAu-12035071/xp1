# lefthook.yml
# Simplified git hooks - avoid conflicts between commands

# Lightweight pre-commit - only essential checks
pre-commit:
  parallel: false # Sequential to avoid conflicts
  commands:
    # Combined format + analysis (lightweight)
    format-and-analyze:
      glob: "*.dart"
      run: |
        echo "üé® Formatting and analyzing staged Dart files..."
        # Format staged files only
        STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACMR | grep '\.dart$')
        if [ -n "$STAGED_FILES" ]; then
          echo "üìù Formatting staged files: $STAGED_FILES"
          fvm dart format $STAGED_FILES --set-exit-if-changed
          git add $STAGED_FILES
        fi
        # Quick analysis on staged files
        fvm dart analyze --fatal-infos
      stage_fixed: true

    # Spell check on staged files
    spell-check:
      glob: "*.md"
      run: |
        STAGED_MD=$(git diff --cached --name-only --diff-filter=ACMR | grep '\.md$')
        if [ -n "$STAGED_MD" ]; then
          echo "üìù Spell checking staged files..."
          npx cspell --config cspell.json $STAGED_MD --no-progress || \
          echo "‚ö†Ô∏è Fix spelling issues before committing"
        fi

    # License check when pubspec changes
    license-check:
      glob: "pubspec.yaml"
      run: |
        if git diff --cached --name-only | grep -q "pubspec.yaml"; then
          echo "üì¶ pubspec.yaml changed, checking licenses..."
          fvm dart run rps license-check
        fi

pre-push:
  parallel: false
  commands:
    # Quick environment generation (lightweight)
    generate-env-dev:
      run: |
        echo "üîß Generating development environment..."
        fvm dart run rps generate-env-dev

    # Quick checks before push (not full CI)
    quick-checks:
      run: |
        echo "‚ö° Running quick pre-push checks..."
        # Quick license check
        fvm dart run rps license-check
        # Quick dependency validation
        fvm dart run rps validate-deps
        # Quick naming validation
        fvm dart run rps analyze-quick

    # Bash script tests (keep lightweight)
    bash-script-tests:
      run: |
        echo "üß™ Testing bash scripts..."
        npm test

commit-msg:
  commands:
    conventional-commit:
      run: fvm dart run tool/validate_commit.dart {1}
