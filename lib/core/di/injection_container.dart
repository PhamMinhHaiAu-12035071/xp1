import 'package:get_it/get_it.dart';
import 'package:injectable/injectable.dart';

// Import will be generated by build_runner
// ignore: unused_import
import 'injection_container.config.dart';

/// Global service locator instance
final GetIt getIt = GetIt.instance;

/// Exception thrown when dependency injection initialization fails.
class DependencyInjectionException implements Exception {
  /// Creates a dependency injection exception with the given error.
  const DependencyInjectionException(this.originalError);

  /// The original error that caused the dependency injection failure.
  final Object originalError;

  @override
  String toString() =>
      'DependencyInjectionException: Failed to initialize dependency '
      'injection: $originalError';
}

/// Configures dependency injection for the application
@InjectableInit()
Future<void> configureDependencies() async {
  try {
    getIt.init();
  } catch (e) {
    // Specific error handling for DI initialization
    throw DependencyInjectionException(e);
  }
}
