include: package:very_good_analysis/analysis_options.yaml

analyzer:
  exclude:
    - "**/*.g.dart"
    - "**/*.freezed.dart"
    - "**/*.mocks.dart"
    - "**/firebase_options.dart"
    - "build/**"
    - "coverage/**"
    - "lib/l10n/gen/*"

  language:
    strict-casts: true
    strict-inference: true
    strict-raw-types: true

  # Custom severity overrides for naming violations
  errors:
    # Make naming violations errors (not warnings)
    non_constant_identifier_names: error
    camel_case_types: error
    constant_identifier_names: error
    file_names: error
    library_names: error
    package_names: error

    # Critical code quality issues
    missing_required_param: error
    missing_return: error
    avoid_dynamic_calls: error

    # Documentation requirement
    public_member_api_docs: error

    # Line length enforcement
    lines_longer_than_80_chars: error

    # Cascade operator consistency
    cascade_invocations: error
    avoid_single_cascade_in_expression_statements: error

# Enhanced naming conventions and coding standards
linter:
  rules:
    # === NAMING CONVENTIONS ===
    # Classes, enums, typedefs: PascalCase
    camel_case_types: true

    # Variables, functions, parameters: camelCase
    non_constant_identifier_names: true

    # Constants: lowerCamelCase (Very Good Analysis standard)
    constant_identifier_names: true

    # Files: snake_case
    file_names: true

    # Libraries: snake_case with underscores
    library_names: true

    # Packages: lowercase_with_underscores
    package_names: true

    # === CODE QUALITY & STANDARDS ===
    # Enforce 80-character line limit for readability
    lines_longer_than_80_chars: true

    # Prefer single quotes for strings
    prefer_single_quotes: true

    # Use trailing commas for better diffs
    require_trailing_commas: true

    # Proper documentation for public APIs
    public_member_api_docs: true

    # Consistent constructor usage
    prefer_const_constructors: true
    prefer_const_constructors_in_immutables: true

    # === CASCADE OPERATORS ===
    # Avoid single cascade (use dot notation for single calls)
    avoid_single_cascade_in_expression_statements: true

    # Prefer cascade for multiple method calls
    cascade_invocations: true

    # === ADDITIONAL QUALITY RULES ===
    # Avoid dynamic types
    avoid_dynamic_calls: true

    # Prefer final for local variables
    prefer_final_locals: true

    # Avoid redundant argument values
    avoid_redundant_argument_values: true

    # === WIDGET SPECIFIC ===
    # Use package imports (Very Good Analysis standard)
    always_use_package_imports: true

    # Sort dependencies alphabetically
    sort_pub_dependencies: true
